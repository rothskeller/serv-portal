let e=document.createElement("style");e.innerHTML="#role-edit{padding:1.5rem .75rem}#role-edit-privs{display:grid;grid:auto/1fr}.role-edit-heading{display:none}.role-edit-group{overflow:hidden;margin-top:.75rem;min-width:0;text-overflow:ellipsis;white-space:nowrap}@media (min-width:450px){#role-edit-privs{justify-content:start;grid:auto/auto -webkit-min-content;grid:auto/auto min-content}.role-edit-heading{display:block;font-weight:700}.role-edit-group{align-self:center;margin-top:0;margin-right:.75rem}}#role-edit-priv-key-body{line-height:1.2;margin:1.5rem .75rem}#role-edit-priv-key-ok{margin:0 .75rem .75rem}",document.head.appendChild(e);import{d as a,h as l,j as o,k as n,s as t,l as i,m as r,n as s,e as d,f as u,q as m,u as p,_ as c,v,x as g,r as f,c as b,a as h,y as w,w as y,o as k,z as C,F as S,g as R,t as F,b as x}from"./index.9f187472.js";import{s as E}from"./page.b35e3bdb.js";var M=a({components:{MessageBox:l,Modal:o,PrivilegeMask:n,SButton:t,SForm:i,SFCheckGroup:r,SFInput:s,SSpinner:d},setup(){const e=v(),a=g(),l=u(null),o=u([]),n=u(!1);m((()=>{E({title:"NEW"===e.params.rid?"Create Role":"Edit Role"});const a=e.params.clone||e.params.rid;c.get("/api/roles/"+a).then((e=>{l.value=e.data.role,o.value=e.data.privs,n.value=e.data.canDelete,i.value.clear(),r.forEach((a=>{e.data.role[a.value]&&i.value.add(a.value)}))}))}));let t=u("");const i=u(new Set),r=[{value:"individual",label:"Individual (one person only)"},{value:"detail",label:"Hide in person list"},{value:"permViewClearances",label:"Can view clearances"},{value:"permEditClearances",label:"Can edit clearances"}],s=p((()=>"NEW"!==e.params.rid));const d=u(null);const f=p((()=>"NEW"===e.params.rid?"Create Role":"Save Role"));const b=u(null);return{allFlags:r,canClone:s,canDelete:n,deleteModal:d,flags:i,keyModal:b,nameError:function(e){return e&&l.value?l.value.name?t.value===l.value.name?"Another role has this name.":"":"The role name is required.":""},onClone:function(){a.push({name:"roles-rid",params:{rid:"NEW",clone:e.params.rid}})},onDelete:async function(){if(!await d.value.show())return;const l=new FormData;l.append("delete","true"),await c.post("/api/roles/"+e.params.rid,l),a.push("/admin/roles")},onShowKey:function(){b.value.show()},onSubmit:async function(){if(!l.value)return;const n=new FormData;n.append("name",l.value.name),r.forEach((e=>{n.append(e.value,i.value.has(e.value).toString())})),o.value.forEach((e=>{e.member&&n.append("member:"+e.id,"true"),e.roster&&n.append("roster:"+e.id,"true"),e.contact&&n.append("contact:"+e.id,"true"),e.admin&&n.append("admin:"+e.id,"true"),e.events&&n.append("events:"+e.id,"true"),e.texts&&n.append("texts:"+e.id,"true"),e.emails&&n.append("emails:"+e.id,"true"),e.bcc&&n.append("bcc:"+e.id,"true"),e.folders&&n.append("folders:"+e.id,"true")}));const s=(await c.post("/api/roles/"+e.params.rid,n)).data;s?s.duplicateName&&(t.value=l.value.name):a.push("/admin/roles")},privs:o,role:l,submitLabel:f}}});const D={key:0,id:"role-edit"},V={class:"form-item",id:"role-edit-privs"},_=h("div",{class:"role-edit-group role-edit-heading"},"Group",-1),L={class:"role-edit-privs role-edit-heading"},B=x("Privileges ("),K=x(")"),N=x("Clone Role"),j=x("Delete Role"),A=h("div",{class:"form-item",id:"role-edit-priv-key-body"},[h("div",null,"M = Role conveys membership in group"),h("div",null,"R = Role allows viewing group roster"),h("div",null,"C = Role allows viewing contact info of group members"),h("div",null,"A = Role allows admin of group (adding/removing members)"),h("div",null,"E = Role allows management of events for group"),h("div",null,"F = Role allows management of files for group"),h("div",null,"T = Role allows sending text messages to group"),h("div",null,"@ = Role allows sending email messages to group"),h("div",null,"B = Role gets bcc'd on email messages to group")],-1),P=x("OK"),U=x("Are you sure you want to delete this role? All associated data, including privileges and role assignments, will be permanently lost.");M.render=function(e,a,l,o,n,t){const i=f("SSpinner"),r=f("SFInput"),s=f("SFCheckGroup"),d=f("PrivilegeMask"),u=f("SButton"),m=f("SForm"),p=f("Modal"),c=f("MessageBox");return e.role?(k(),b(m,{key:1,id:"role-edit",onSubmit:e.onSubmit,submitLabel:e.submitLabel},w({default:y((()=>[h(r,{id:"role-edit-name",label:"Role name",trim:"",autofocus:"",modelValue:e.role.name,"onUpdate:modelValue":a[1]||(a[1]=a=>e.role.name=a),errorFn:e.nameError},null,8,["modelValue","errorFn"]),h(s,{id:"role-edit-flags",label:"Flags",options:e.allFlags,modelValue:e.flags,"onUpdate:modelValue":a[2]||(a[2]=a=>e.flags=a)},null,8,["options","modelValue"]),h("div",V,[_,h("div",L,[B,h("a",{href:"#",onClick:a[3]||(a[3]=(...a)=>e.onShowKey(...a))},"Key"),K]),(k(!0),b(S,null,R(e.privs,((a,l)=>(k(),b(S,null,[h("div",{class:"role-edit-group",textContent:F(a.name)},null,8,["textContent"]),h(d,{class:"role-edit-privs",modelValue:e.privs[l],"onUpdate:modelValue":a=>e.privs[l]=a},null,8,["modelValue","onUpdate:modelValue"])],64)))),256))]),h(p,{ref:"keyModal"},{default:y((({close:e})=>[h(m,{dialog:"",title:"Privileges Key"},{buttons:y((()=>[h(u,{id:"role-edit-priv-key-ok",variant:"primary",onClick:a=>e(null)},{default:y((()=>[P])),_:1},8,["onClick"])])),default:y((()=>[A])),_:1})])),_:1},512),h(c,{ref:"deleteModal",title:"Delete Role",cancelLabel:"Keep",okLabel:"Delete",variant:"danger"},{default:y((()=>[U])),_:1},512)])),_:2},[e.canDelete||e.canClone?{name:"extraButtons",fn:y((()=>[e.canClone?(k(),b(u,{key:0,onClick:e.onClone},{default:y((()=>[N])),_:1},8,["onClick"])):C("",!0),e.canDelete?(k(),b(u,{key:1,variant:"danger",onClick:e.onDelete},{default:y((()=>[j])),_:1},8,["onClick"])):C("",!0)]))}:void 0]),1032,["onSubmit","submitLabel"])):(k(),b("div",D,[h(i)]))};export default M;
